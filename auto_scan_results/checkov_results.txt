
       _               _
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V /
  \___|_| |_|\___|\___|_|\_\___/ \_/

By Prisma Cloud | version: 3.2.484 

terraform scan results:

Passed checks: 31, Failed checks: 52, Skipped checks: 0

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1
Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12
Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-2
Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-rds-uses-a-modern-cacert
Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4
Check: CKV_AWS_388: "Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-rds-instances-have-backup-policy
Check: CKV_AWS_354: "Ensure RDS Performance Insights are encrypted using KMS CMKs"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-354
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-rds-uses-a-modern-cacert
Check: CKV_AWS_388: "Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability"
	PASSED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	PASSED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-rds-instances-have-backup-policy
Check: CKV_AWS_354: "Ensure RDS Performance Insights are encrypted using KMS CMKs"
	PASSED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-354
Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24
Check: CKV2_AWS_69: "Ensure AWS RDS database instance configured with encryption in transit"
	PASSED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-69
Check: CKV2_AWS_69: "Ensure AWS RDS database instance configured with encryption in transit"
	PASSED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-69
Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	PASSED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis
Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13

		1 | resource "aws_instance" "bad_instance" {
		2 |   ami           = "ami-0c55b159cbfafe1f0"  # Example AMI
		3 |   instance_type = "t2.micro"
		4 |   associate_public_ip_address = true
		5 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31

		1 | resource "aws_instance" "bad_instance" {
		2 |   ami           = "ami-0c55b159cbfafe1f0"  # Example AMI
		3 |   instance_type = "t2.micro"
		4 |   associate_public_ip_address = true
		5 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		1 | resource "aws_instance" "bad_instance" {
		2 |   ami           = "ami-0c55b159cbfafe1f0"  # Example AMI
		3 |   instance_type = "t2.micro"
		4 |   associate_public_ip_address = true
		5 | }

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	FAILED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12

		1 | resource "aws_instance" "bad_instance" {
		2 |   ami           = "ami-0c55b159cbfafe1f0"  # Example AMI
		3 |   instance_type = "t2.micro"
		4 |   associate_public_ip_address = true
		5 | }

Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized

		1 | resource "aws_instance" "bad_instance" {
		2 |   ami           = "ami-0c55b159cbfafe1f0"  # Example AMI
		3 |   instance_type = "t2.micro"
		4 |   associate_public_ip_address = true
		5 | }

Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13

		1  | resource "aws_instance" "secure_instance" {
		2  |   ami                    = "ami-0c55b159cbfafe1f0"  # Still needs to be valid in your region
		3  |   instance_type          = "t2.micro"
		4  |   associate_public_ip_address = false  # 🚫 No public IP — keep it private
		5  | 
		6  |   vpc_security_group_ids = [aws_security_group.secure_sg.id]
		7  | 
		8  |   tags = {
		9  |     Name = "SecureEC2"
		10 |   }
		11 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31

		1  | resource "aws_instance" "secure_instance" {
		2  |   ami                    = "ami-0c55b159cbfafe1f0"  # Still needs to be valid in your region
		3  |   instance_type          = "t2.micro"
		4  |   associate_public_ip_address = false  # 🚫 No public IP — keep it private
		5  | 
		6  |   vpc_security_group_ids = [aws_security_group.secure_sg.id]
		7  | 
		8  |   tags = {
		9  |     Name = "SecureEC2"
		10 |   }
		11 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		1  | resource "aws_instance" "secure_instance" {
		2  |   ami                    = "ami-0c55b159cbfafe1f0"  # Still needs to be valid in your region
		3  |   instance_type          = "t2.micro"
		4  |   associate_public_ip_address = false  # 🚫 No public IP — keep it private
		5  | 
		6  |   vpc_security_group_ids = [aws_security_group.secure_sg.id]
		7  | 
		8  |   tags = {
		9  |     Name = "SecureEC2"
		10 |   }
		11 | }

Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized

		1  | resource "aws_instance" "secure_instance" {
		2  |   ami                    = "ami-0c55b159cbfafe1f0"  # Still needs to be valid in your region
		3  |   instance_type          = "t2.micro"
		4  |   associate_public_ip_address = false  # 🚫 No public IP — keep it private
		5  | 
		6  |   vpc_security_group_ids = [aws_security_group.secure_sg.id]
		7  | 
		8  |   tags = {
		9  |     Name = "SecureEC2"
		10 |   }
		11 | }

Check: CKV_AWS_382: "Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
	FAILED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		13 | resource "aws_security_group" "secure_sg" {
		14 |   name        = "secure-sg"
		15 |   description = "Allow HTTP from internal subnet only"
		16 | 
		17 |   ingress {
		18 |     from_port   = 80
		19 |     to_port     = 80
		20 |     protocol    = "tcp"
		21 |     cidr_blocks = ["10.0.0.0/16"]  # ✅ Example private subnet
		22 |   }
		23 | 
		24 |   egress {
		25 |     from_port   = 0
		26 |     to_port     = 0
		27 |     protocol    = "-1"
		28 |     cidr_blocks = ["0.0.0.0/0"]
		29 |   }
		30 | }

Check: CKV_AWS_23: "Ensure every security group and rule has a description"
	FAILED for resource: aws_security_group.secure_sg
	File: /ec2_secure.tf:13-30
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		13 | resource "aws_security_group" "secure_sg" {
		14 |   name        = "secure-sg"
		15 |   description = "Allow HTTP from internal subnet only"
		16 | 
		17 |   ingress {
		18 |     from_port   = 80
		19 |     to_port     = 80
		20 |     protocol    = "tcp"
		21 |     cidr_blocks = ["10.0.0.0/16"]  # ✅ Example private subnet
		22 |   }
		23 | 
		24 |   egress {
		25 |     from_port   = 0
		26 |     to_port     = 0
		27 |     protocol    = "-1"
		28 |     cidr_blocks = ["0.0.0.0/0"]
		29 |   }
		30 | }

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_288: "Ensure IAM policies does not allow data exfiltration"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-288

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_289: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-289

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_286: "Ensure IAM policies does not allow privilege escalation"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-286

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_355: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-355

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_290: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-290

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_287: "Ensure IAM policies does not allow credentials exposure"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-287

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

Check: CKV_AWS_382: "Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
	FAILED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		1  | resource "aws_security_group" "bad_sg" {
		2  |   name        = "open-sg"
		3  |   description = "Security group with open SSH access"
		4  |   ingress {
		5  |     from_port   = 22
		6  |     to_port     = 22
		7  |     protocol    = "tcp"
		8  |     cidr_blocks = ["0.0.0.0/0"]
		9  |   }
		10 |   egress {
		11 |     from_port   = 0
		12 |     to_port     = 0
		13 |     protocol    = "-1"
		14 |     cidr_blocks = ["0.0.0.0/0"]
		15 |   }
		16 | }

Check: CKV_AWS_23: "Ensure every security group and rule has a description"
	FAILED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		1  | resource "aws_security_group" "bad_sg" {
		2  |   name        = "open-sg"
		3  |   description = "Security group with open SSH access"
		4  |   ingress {
		5  |     from_port   = 22
		6  |     to_port     = 22
		7  |     protocol    = "tcp"
		8  |     cidr_blocks = ["0.0.0.0/0"]
		9  |   }
		10 |   egress {
		11 |     from_port   = 0
		12 |     to_port     = 0
		13 |     protocol    = "-1"
		14 |     cidr_blocks = ["0.0.0.0/0"]
		15 |   }
		16 | }

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security

		1  | resource "aws_security_group" "bad_sg" {
		2  |   name        = "open-sg"
		3  |   description = "Security group with open SSH access"
		4  |   ingress {
		5  |     from_port   = 22
		6  |     to_port     = 22
		7  |     protocol    = "tcp"
		8  |     cidr_blocks = ["0.0.0.0/0"]
		9  |   }
		10 |   egress {
		11 |     from_port   = 0
		12 |     to_port     = 0
		13 |     protocol    = "-1"
		14 |     cidr_blocks = ["0.0.0.0/0"]
		15 |   }
		16 | }

Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV_AWS_226: "Ensure DB instance gets all minor upgrades automatically"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV_AWS_293: "Ensure that AWS database instances have deletion protection enabled"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV_AWS_382: "Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
	FAILED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		16 | resource "aws_security_group" "db_sg" {
		17 |   name        = "db-secure-sg"
		18 |   description = "Allow MySQL access from internal app subnet"
		19 | 
		20 |   ingress {
		21 |     from_port   = 3306
		22 |     to_port     = 3306
		23 |     protocol    = "tcp"
		24 |     cidr_blocks = ["10.0.0.0/16"]  # ✅ Example: allow internal apps
		25 |   }
		26 | 
		27 |   egress {
		28 |     from_port   = 0
		29 |     to_port     = 0
		30 |     protocol    = "-1"
		31 |     cidr_blocks = ["0.0.0.0/0"]
		32 |   }
		33 | }

Check: CKV_AWS_23: "Ensure every security group and rule has a description"
	FAILED for resource: aws_security_group.db_sg
	File: /rds_secure.tf:16-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		16 | resource "aws_security_group" "db_sg" {
		17 |   name        = "db-secure-sg"
		18 |   description = "Allow MySQL access from internal app subnet"
		19 | 
		20 |   ingress {
		21 |     from_port   = 3306
		22 |     to_port     = 3306
		23 |     protocol    = "tcp"
		24 |     cidr_blocks = ["10.0.0.0/16"]  # ✅ Example: allow internal apps
		25 |   }
		26 | 
		27 |   egress {
		28 |     from_port   = 0
		29 |     to_port     = 0
		30 |     protocol    = "-1"
		31 |     cidr_blocks = ["0.0.0.0/0"]
		32 |   }
		33 | }

Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-2

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_226: "Ensure DB instance gets all minor upgrades automatically"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_293: "Ensure that AWS database instances have deletion protection enabled"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV2_AWS_62: "Ensure S3 buckets should have event notifications enabled"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	FAILED for resource: aws_instance.bad_instance
	File: /ec2_public_ip.tf:1-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance

		1 | resource "aws_instance" "bad_instance" {
		2 |   ami           = "ami-0c55b159cbfafe1f0"  # Example AMI
		3 |   instance_type = "t2.micro"
		4 |   associate_public_ip_address = true
		5 | }

Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	FAILED for resource: aws_instance.secure_instance
	File: /ec2_secure.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance

		1  | resource "aws_instance" "secure_instance" {
		2  |   ami                    = "ami-0c55b159cbfafe1f0"  # Still needs to be valid in your region
		3  |   instance_type          = "t2.micro"
		4  |   associate_public_ip_address = false  # 🚫 No public IP — keep it private
		5  | 
		6  |   vpc_security_group_ids = [aws_security_group.secure_sg.id]
		7  | 
		8  |   tags = {
		9  |     Name = "SecureEC2"
		10 |   }
		11 | }

Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.bad_sg
	File: /open_sg.tf:1-16
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		1  | resource "aws_security_group" "bad_sg" {
		2  |   name        = "open-sg"
		3  |   description = "Security group with open SSH access"
		4  |   ingress {
		5  |     from_port   = 22
		6  |     to_port     = 22
		7  |     protocol    = "tcp"
		8  |     cidr_blocks = ["0.0.0.0/0"]
		9  |   }
		10 |   egress {
		11 |     from_port   = 0
		12 |     to_port     = 0
		13 |     protocol    = "-1"
		14 |     cidr_blocks = ["0.0.0.0/0"]
		15 |   }
		16 | }

Check: CKV2_AWS_60: "Ensure RDS instance with copy tags to snapshots is enabled"
	FAILED for resource: aws_db_instance.secure_db
	File: /rds_secure.tf:1-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-60

		1  | resource "aws_db_instance" "secure_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = var.db_user
		7  |   password             = var.db_password
		8  | 
		9  |   publicly_accessible  = false        # ✅ Private DB
		10 |   skip_final_snapshot  = false        # ✅ Keep final snapshot on delete
		11 |   storage_encrypted    = true         # ✅ Encrypted at rest
		12 | 
		13 |   vpc_security_group_ids = [aws_security_group.db_sg.id]
		14 | }

Check: CKV2_AWS_60: "Ensure RDS instance with copy tags to snapshots is enabled"
	FAILED for resource: aws_db_instance.bad_db
	File: /rds_unencrypted.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-60

		1  | resource "aws_db_instance" "bad_db" {
		2  |   allocated_storage    = 20
		3  |   engine               = "mysql"
		4  |   instance_class       = "db.t3.micro"
		5  |   name                 = "mydb"
		6  |   username             = "foo"
		7  |   password             = "barbaz123"
		8  |   publicly_accessible  = true
		9  |   skip_final_snapshot  = true
		10 |   storage_encrypted    = false
		11 | }

Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV2_AWS_61: "Ensure that an S3 bucket has a lifecycle configuration"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.bad_bucket
	File: /s3_public.tf:1-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		1 | resource "aws_s3_bucket" "bad_bucket" {
		2 |   bucket = "public-bucket-example"
		3 |   acl    = "public-read"
		4 | }

Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
	FAILED for resource: aws_iam_policy.bad_policy
	File: /iam_star_policy.tf:1-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-40

		1  | resource "aws_iam_policy" "bad_policy" {
		2  |   name   = "admin-policy"
		3  |   policy = jsonencode({
		4  |     Version = "2012-10-17",
		5  |     Statement = [{
		6  |       Action = "*",
		7  |       Effect = "Allow",
		8  |       Resource = "*"
		9  |     }]
		10 |   })
		11 | }

cloudformation scan results:

Passed checks: 2, Failed checks: 7, Skipped checks: 0

Check: CKV_AWS_57: "Ensure the S3 bucket does not allow WRITE permissions to everyone"
	PASSED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_19: "Ensure the S3 bucket has server-side-encryption enabled"
	PASSED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead

Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead

Check: CKV_AWS_56: "Ensure S3 bucket has RestrictPublicBuckets enabled"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead

Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead

Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLs enabled"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead

Check: CKV_AWS_20: "Ensure the S3 bucket does not allow READ permissions to everyone"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead

Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: AWS::S3::Bucket.PublicBucket
	File: /cf_s3_public.yaml:2-5
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		2 |   PublicBucket:
		3 |     Type: AWS::S3::Bucket
		4 |     Properties:
		5 |       AccessControl: PublicRead


